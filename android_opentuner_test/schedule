Halide::Var _x0, _y3, _x4, _x6, _y7, _x8, _x10, _x14, _y15;
Halide::Func(funcs["blur1"])
.split(x, x, _x0, 32)
.reorder(_x0, y, x)
.reorder_storage(x, y)
.vectorize(_x0, 4)
.compute_at(Halide::Func(funcs["blur4"]), y)
;
Halide::Func(funcs["blur2"])
.split(y, y, _y3, 4)
.reorder(_y3, y, x)
.reorder_storage(x, y)
.compute_at(Halide::Func(funcs["blur4"]), x)
;
Halide::Func(funcs["blur3"])
.split(x, x, _x4, 32)
.reorder(_x4, x, y)
.reorder_storage(y, x)
.vectorize(_x4, 8)
.compute_at(Halide::Func(funcs["blur4"]), _y7)
;
Halide::Func(funcs["blur4"])
.split(x, x, _x6, 64)
.split(y, y, _y7, 4)
.reorder(_x6, _y7, x, y)
.reorder_storage(x, y)
.vectorize(_x6, 8)
.parallel(y)
.compute_root()
;
Halide::Func(funcs["blur5"])
.split(x, x, _x8, 64)
.reorder(_x8, x, y)
.reorder_storage(x, y)
.vectorize(_x8, 8)
.compute_at(Halide::Func(funcs["blur8"]), y)
;
Halide::Func(funcs["blur6"])
.split(x, x, _x10, 64)
.reorder(_x10, x, y)
.reorder_storage(x, y)
.vectorize(_x10, 8)
.compute_at(Halide::Func(funcs["blur7"]), y)
;
Halide::Func(funcs["blur7"])
.reorder(x, y)
.reorder_storage(y, x)
.vectorize(x, 8)
.compute_at(Halide::Func(funcs["blur8"]), x)
;
Halide::Func(funcs["blur8"])
.split(x, x, _x14, 32)
.split(y, y, _y15, 4)
.reorder(_x14, x, _y15, y)
.reorder_storage(y, x)
.vectorize(_x14, 8)
.parallel(y)
.compute_root()
;

